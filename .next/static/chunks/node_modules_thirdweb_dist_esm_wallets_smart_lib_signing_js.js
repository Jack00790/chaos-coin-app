"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_thirdweb_dist_esm_wallets_smart_lib_signing_js"],{

/***/ "./node_modules/ox/_esm/erc6492/WrappedSignature.js":
/*!**********************************************************!*\
  !*** ./node_modules/ox/_esm/erc6492/WrappedSignature.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InvalidWrappedSignatureError: function() { return /* binding */ InvalidWrappedSignatureError; },\n/* harmony export */   assert: function() { return /* binding */ assert; },\n/* harmony export */   from: function() { return /* binding */ from; },\n/* harmony export */   fromHex: function() { return /* binding */ fromHex; },\n/* harmony export */   magicBytes: function() { return /* binding */ magicBytes; },\n/* harmony export */   toHex: function() { return /* binding */ toHex; },\n/* harmony export */   universalSignatureValidatorAbi: function() { return /* binding */ universalSignatureValidatorAbi; },\n/* harmony export */   universalSignatureValidatorBytecode: function() { return /* binding */ universalSignatureValidatorBytecode; },\n/* harmony export */   validate: function() { return /* binding */ validate; }\n/* harmony export */ });\n/* harmony import */ var _core_AbiParameters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AbiParameters.js */ \"./node_modules/ox/_esm/core/AbiParameters.js\");\n/* harmony import */ var _core_Errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/Errors.js */ \"./node_modules/ox/_esm/core/Errors.js\");\n/* harmony import */ var _core_Hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/Hex.js */ \"./node_modules/ox/_esm/core/Hex.js\");\n/* harmony import */ var _core_Signature_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/Signature.js */ \"./node_modules/ox/_esm/core/Signature.js\");\n\n\n\n\n/**\n * Magic bytes used to identify ERC-6492 wrapped signatures.\n */\nconst magicBytes = '0x6492649264926492649264926492649264926492649264926492649264926492';\n/**\n * Deployless ERC-6492 signature verification bytecode.\n */\nconst universalSignatureValidatorBytecode = '0x608060405234801561001057600080fd5b5060405161069438038061069483398101604081905261002f9161051e565b600061003c848484610048565b9050806000526001601ff35b60007f64926492649264926492649264926492649264926492649264926492649264926100748361040c565b036101e7576000606080848060200190518101906100929190610577565b60405192955090935091506000906001600160a01b038516906100b69085906105dd565b6000604051808303816000865af19150503d80600081146100f3576040519150601f19603f3d011682016040523d82523d6000602084013e6100f8565b606091505b50509050876001600160a01b03163b60000361016057806101605760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90610190908b9087906004016105f9565b602060405180830381865afa1580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d19190610633565b6001600160e01b03191614945050505050610405565b6001600160a01b0384163b1561027a57604051630b135d3f60e11b808252906001600160a01b03861690631626ba7e9061022790879087906004016105f9565b602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610633565b6001600160e01b031916149050610405565b81516041146102df5760405162461bcd60e51b815260206004820152603a602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e6774680000000000006064820152608401610157565b6102e7610425565b5060208201516040808401518451859392600091859190811061030c5761030c61065d565b016020015160f81c9050601b811480159061032b57508060ff16601c14155b1561038c5760405162461bcd60e51b815260206004820152603b602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c756500000000006064820152608401610157565b60408051600081526020810180835289905260ff83169181019190915260608101849052608081018390526001600160a01b0389169060019060a0016020604051602081039080840390855afa1580156103ea573d6000803e3d6000fd5b505050602060405103516001600160a01b0316149450505050505b9392505050565b600060208251101561041d57600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b038116811461045857600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561048c578181015183820152602001610474565b50506000910152565b600082601f8301126104a657600080fd5b81516001600160401b038111156104bf576104bf61045b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156104ed576104ed61045b565b60405281815283820160200185101561050557600080fd5b610516826020830160208701610471565b949350505050565b60008060006060848603121561053357600080fd5b835161053e81610443565b6020850151604086015191945092506001600160401b0381111561056157600080fd5b61056d86828701610495565b9150509250925092565b60008060006060848603121561058c57600080fd5b835161059781610443565b60208501519093506001600160401b038111156105b357600080fd5b6105bf86828701610495565b604086015190935090506001600160401b0381111561056157600080fd5b600082516105ef818460208701610471565b9190910192915050565b828152604060208201526000825180604084015261061e816060850160208701610471565b601f01601f1916919091016060019392505050565b60006020828403121561064557600080fd5b81516001600160e01b03198116811461040557600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572';\n/**\n * ABI for the ERC-6492 universal deployless signature validator contract.\n *\n * Constructor return value is `0x1` (valid) or `0x0` (invalid).\n */\nconst universalSignatureValidatorAbi = [\n    {\n        inputs: [\n            {\n                name: '_signer',\n                type: 'address',\n            },\n            {\n                name: '_hash',\n                type: 'bytes32',\n            },\n            {\n                name: '_signature',\n                type: 'bytes',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'constructor',\n    },\n    {\n        inputs: [\n            {\n                name: '_signer',\n                type: 'address',\n            },\n            {\n                name: '_hash',\n                type: 'bytes32',\n            },\n            {\n                name: '_signature',\n                type: 'bytes',\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'isValidSig',\n    },\n];\n/**\n * Asserts that the wrapped signature is valid.\n *\n * @example\n * ```ts twoslash\n * import { WrappedSignature } from 'ox/erc6492'\n *\n * WrappedSignature.assert('0xdeadbeef')\n * // @error: InvalidWrappedSignatureError: Value `0xdeadbeef` is an invalid ERC-6492 wrapped signature.\n * ```\n *\n * @param wrapped - The wrapped signature to assert.\n */\nfunction assert(wrapped) {\n    if (_core_Hex_js__WEBPACK_IMPORTED_MODULE_0__.slice(wrapped, -32) !== magicBytes)\n        throw new InvalidWrappedSignatureError(wrapped);\n}\n/**\n * Parses an [ERC-6492 wrapped signature](https://eips.ethereum.org/EIPS/eip-6492#specification) into its constituent parts.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Secp256k1 } from 'ox'\n * import { WrappedSignature } from 'ox/erc6492' // [!code focus]\n *\n * const signature = Secp256k1.sign({\n *   payload: '0x...',\n *   privateKey: '0x...',\n * })\n *\n * // Instantiate from serialized format. // [!code focus]\n * const wrapped = WrappedSignature.from('0x...') // [!code focus]\n * // @log: { data: '0x...', signature: { ... }, to: '0x...', } // [!code focus]\n *\n * // Instantiate from constituent parts. // [!code focus]\n * const wrapped = WrappedSignature.from({ // [!code focus]\n *   data: '0x...', // [!code focus]\n *   signature, // [!code focus]\n *   to: '0x...', // [!code focus]\n * })\n * // @log: { data: '0x...', signature: { ... }, to: '0x...', }\n * ```\n *\n * @param wrapped - Wrapped signature to parse.\n * @returns Wrapped signature.\n */\nfunction from(wrapped) {\n    if (typeof wrapped === 'string')\n        return fromHex(wrapped);\n    return wrapped;\n}\n/**\n * Parses an [ERC-6492 wrapped signature](https://eips.ethereum.org/EIPS/eip-6492#specification) into its constituent parts.\n *\n * @example\n * ```ts twoslash\n * import { WrappedSignature } from 'ox/erc6492'\n *\n * const { data, signature, to } = WrappedSignature.fromHex('0x...')\n * ```\n *\n * @param wrapped - Wrapped signature to parse.\n * @returns Wrapped signature.\n */\nfunction fromHex(wrapped) {\n    assert(wrapped);\n    const [to, data, signature_hex] = _core_AbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.decode(_core_AbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.from('address, bytes, bytes'), wrapped);\n    const signature = _core_Signature_js__WEBPACK_IMPORTED_MODULE_2__.fromHex(signature_hex);\n    return { data, signature, to };\n}\n/**\n * Serializes an [ERC-6492 wrapped signature](https://eips.ethereum.org/EIPS/eip-6492#specification).\n *\n * @example\n * ```ts twoslash\n * import { Secp256k1 } from 'ox'\n * import { WrappedSignature } from 'ox/erc6492' // [!code focus]\n *\n * const signature = Secp256k1.sign({\n *   payload: '0x...',\n *   privateKey: '0x...',\n * })\n *\n * const wrapped = WrappedSignature.toHex({ // [!code focus]\n *   data: '0xdeadbeef', // [!code focus]\n *   signature, // [!code focus]\n *   to: '0x00000000219ab540356cBB839Cbe05303d7705Fa', // [!code focus]\n * }) // [!code focus]\n * ```\n *\n * @param value - Wrapped signature to serialize.\n * @returns Serialized wrapped signature.\n */\nfunction toHex(value) {\n    const { data, signature, to } = value;\n    return _core_Hex_js__WEBPACK_IMPORTED_MODULE_0__.concat(_core_AbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.encode(_core_AbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.from('address, bytes, bytes'), [\n        to,\n        data,\n        _core_Signature_js__WEBPACK_IMPORTED_MODULE_2__.toHex(signature),\n    ]), magicBytes);\n}\n/**\n * Validates a wrapped signature. Returns `true` if the wrapped signature is valid, `false` otherwise.\n *\n * @example\n * ```ts twoslash\n * import { WrappedSignature } from 'ox/erc6492'\n *\n * const valid = WrappedSignature.validate('0xdeadbeef')\n * // @log: false\n * ```\n *\n * @param wrapped - The wrapped signature to validate.\n * @returns `true` if the wrapped signature is valid, `false` otherwise.\n */\nfunction validate(wrapped) {\n    try {\n        assert(wrapped);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n/** Thrown when the ERC-6492 wrapped signature is invalid. */\nclass InvalidWrappedSignatureError extends _core_Errors_js__WEBPACK_IMPORTED_MODULE_3__.BaseError {\n    constructor(wrapped) {\n        super(`Value \\`${wrapped}\\` is an invalid ERC-6492 wrapped signature.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WrappedSignature.InvalidWrappedSignatureError'\n        });\n    }\n}\n//# sourceMappingURL=WrappedSignature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ox/_esm/erc6492/WrappedSignature.js\n"));

/***/ }),

/***/ "./node_modules/ox/_esm/erc6492/index.js":
/*!***********************************************!*\
  !*** ./node_modules/ox/_esm/erc6492/index.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WrappedSignature: function() { return /* reexport module object */ _WrappedSignature_js__WEBPACK_IMPORTED_MODULE_0__; }\n/* harmony export */ });\n/* harmony import */ var _WrappedSignature_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WrappedSignature.js */ \"./node_modules/ox/_esm/erc6492/WrappedSignature.js\");\n/**\n * Utility functions for working with [ERC-6492 wrapped signatures](https://eips.ethereum.org/EIPS/eip-6492#specification).\n *\n * @example\n * ```ts twoslash\n * import { Secp256k1, PersonalMessage } from 'ox'\n * import { WrappedSignature } from 'ox/erc6492' // [!code focus]\n *\n * const signature = Secp256k1.sign({\n *   payload: PersonalMessage.getSignPayload('0xdeadbeef'),\n *   privateKey: '0x...',\n * })\n *\n * const wrapped = WrappedSignature.toHex({ // [!code focus]\n *   data: '0xcafebabe', // [!code focus]\n *   signature, // [!code focus]\n *   to: '0xcafebabecafebabecafebabecafebabecafebabe', // [!code focus]\n * }) // [!code focus]\n * // @log: '0x000000000000000000000000cafebabecafebabecafebabecafebabecafebabe000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000004deadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041fa78c5905fb0b9d6066ef531f962a62bc6ef0d5eb59ecb134056d206f75aaed7780926ff2601a935c2c79707d9e1799948c9f19dcdde1e090e903b19a07923d01c000000000000000000000000000000000000000000000000000000000000006492649264926492649264926492649264926492649264926492649264926492'\n * ```\n *\n * @category ERC-6492\n */\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvb3gvX2VzbS9lcmM2NDkyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksNkJBQTZCO0FBQ3pDLFlBQVksbUJBQW1CO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzBEO0FBQzFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9veC9fZXNtL2VyYzY0OTIvaW5kZXguanM/ZTBjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFV0aWxpdHkgZnVuY3Rpb25zIGZvciB3b3JraW5nIHdpdGggW0VSQy02NDkyIHdyYXBwZWQgc2lnbmF0dXJlc10oaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC02NDkyI3NwZWNpZmljYXRpb24pLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0cyB0d29zbGFzaFxuICogaW1wb3J0IHsgU2VjcDI1NmsxLCBQZXJzb25hbE1lc3NhZ2UgfSBmcm9tICdveCdcbiAqIGltcG9ydCB7IFdyYXBwZWRTaWduYXR1cmUgfSBmcm9tICdveC9lcmM2NDkyJyAvLyBbIWNvZGUgZm9jdXNdXG4gKlxuICogY29uc3Qgc2lnbmF0dXJlID0gU2VjcDI1NmsxLnNpZ24oe1xuICogICBwYXlsb2FkOiBQZXJzb25hbE1lc3NhZ2UuZ2V0U2lnblBheWxvYWQoJzB4ZGVhZGJlZWYnKSxcbiAqICAgcHJpdmF0ZUtleTogJzB4Li4uJyxcbiAqIH0pXG4gKlxuICogY29uc3Qgd3JhcHBlZCA9IFdyYXBwZWRTaWduYXR1cmUudG9IZXgoeyAvLyBbIWNvZGUgZm9jdXNdXG4gKiAgIGRhdGE6ICcweGNhZmViYWJlJywgLy8gWyFjb2RlIGZvY3VzXVxuICogICBzaWduYXR1cmUsIC8vIFshY29kZSBmb2N1c11cbiAqICAgdG86ICcweGNhZmViYWJlY2FmZWJhYmVjYWZlYmFiZWNhZmViYWJlY2FmZWJhYmUnLCAvLyBbIWNvZGUgZm9jdXNdXG4gKiB9KSAvLyBbIWNvZGUgZm9jdXNdXG4gKiAvLyBAbG9nOiAnMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYWZlYmFiZWNhZmViYWJlY2FmZWJhYmVjYWZlYmFiZWNhZmViYWJlMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA2MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA0ZGVhZGJlZWYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNDFmYTc4YzU5MDVmYjBiOWQ2MDY2ZWY1MzFmOTYyYTYyYmM2ZWYwZDVlYjU5ZWNiMTM0MDU2ZDIwNmY3NWFhZWQ3NzgwOTI2ZmYyNjAxYTkzNWMyYzc5NzA3ZDllMTc5OTk0OGM5ZjE5ZGNkZGUxZTA5MGU5MDNiMTlhMDc5MjNkMDFjMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA2NDkyNjQ5MjY0OTI2NDkyNjQ5MjY0OTI2NDkyNjQ5MjY0OTI2NDkyNjQ5MjY0OTI2NDkyNjQ5MjY0OTI2NDkyJ1xuICogYGBgXG4gKlxuICogQGNhdGVnb3J5IEVSQy02NDkyXG4gKi9cbmV4cG9ydCAqIGFzIFdyYXBwZWRTaWduYXR1cmUgZnJvbSAnLi9XcmFwcGVkU2lnbmF0dXJlLmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ox/_esm/erc6492/index.js\n"));

/***/ }),

/***/ "./node_modules/thirdweb/dist/esm/auth/constants.js":
/*!**********************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/auth/constants.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ERC_6492_MAGIC_VALUE: function() { return /* binding */ ERC_6492_MAGIC_VALUE; }\n/* harmony export */ });\nconst ERC_6492_MAGIC_VALUE = \"0x6492649264926492649264926492649264926492649264926492649264926492\";\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vYXV0aC9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL2F1dGgvY29uc3RhbnRzLmpzPzhiOGQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IEVSQ182NDkyX01BR0lDX1ZBTFVFID0gXCIweDY0OTI2NDkyNjQ5MjY0OTI2NDkyNjQ5MjY0OTI2NDkyNjQ5MjY0OTI2NDkyNjQ5MjY0OTI2NDkyNjQ5MjY0OTJcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/auth/constants.js\n"));

/***/ }),

/***/ "./node_modules/thirdweb/dist/esm/auth/serialize-erc6492-signature.js":
/*!****************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/auth/serialize-erc6492-signature.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializeErc6492Signature: function() { return /* binding */ serializeErc6492Signature; }\n/* harmony export */ });\n/* harmony import */ var _utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/abi/encodeAbiParameters.js */ \"./node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js\");\n/* harmony import */ var _utils_encoding_helpers_concat_hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/encoding/helpers/concat-hex.js */ \"./node_modules/thirdweb/dist/esm/utils/encoding/helpers/concat-hex.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/thirdweb/dist/esm/auth/constants.js\");\n\n\n\n/**\n * Serializes a signature for use with [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492). The signature must be generated by a signer for an [ERC-4337](https://eips.ethereum.org/EIPS/eip-4337) Account Factory account with counterfactual deployment addresses.\n *\n * @param {@link Erc6492Signature} signature  The signature object to serialize into Hex format\n * @param {string} signature.address The ERC-4337 Account Factory address\n * @param {Hex} signature.data Account deployment calldata (if not deployed) for counterfactual verification\n * @param {Hex} signature.signature The original signature\n *\n * @returns {Hex} The serialized signature\n *\n * @example\n * ```ts\n * import { serializeErc6492Signature } from 'thirdweb/auth';\n *\n * const serializedSignature = serializeErc6492Signature({\n *  address: '0x...',\n *  data: '0x...',\n *  signature: '0x...',\n * });\n * // 0x000000000000000000000000cafebabecafebabecafebabecafebabecafebabe000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000004deadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041a461f509887bd19e312c0c58467ce8ff8e300d3c1a90b608a760c5b80318eaf15fe57c96f9175d6cd4daad4663763baa7e78836e067d0163e9a2ccf2ff753f5b1b000000000000000000000000000000000000000000000000000000000000006492649264926492649264926492649264926492649264926492649264926492\n * ```\n * @auth\n */\nfunction serializeErc6492Signature({ address, data, signature, }) {\n    return (0,_utils_encoding_helpers_concat_hex_js__WEBPACK_IMPORTED_MODULE_0__.concatHex)([\n        (0,_utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.encodeAbiParameters)([{ type: \"address\" }, { type: \"bytes\" }, { type: \"bytes\" }], [address, data, signature]),\n        _constants_js__WEBPACK_IMPORTED_MODULE_2__.ERC_6492_MAGIC_VALUE,\n    ]);\n}\n//# sourceMappingURL=serialize-erc6492-signature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vYXV0aC9zZXJpYWxpemUtZXJjNjQ5Mi1zaWduYXR1cmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEwRTtBQUNOO0FBQ2Q7QUFDdEQ7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3QkFBd0I7QUFDbkMsV0FBVyxRQUFRO0FBQ25CLFdBQVcsS0FBSztBQUNoQixXQUFXLEtBQUs7QUFDaEI7QUFDQSxhQUFhLEtBQUs7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsWUFBWSw0QkFBNEI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNPLHFDQUFxQywyQkFBMkI7QUFDdkUsV0FBVyxnRkFBUztBQUNwQixRQUFRLHNGQUFtQixJQUFJLGlCQUFpQixJQUFJLGVBQWUsSUFBSSxlQUFlO0FBQ3RGLFFBQVEsK0RBQW9CO0FBQzVCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vYXV0aC9zZXJpYWxpemUtZXJjNjQ5Mi1zaWduYXR1cmUuanM/ZTM2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbmNvZGVBYmlQYXJhbWV0ZXJzIH0gZnJvbSBcIi4uL3V0aWxzL2FiaS9lbmNvZGVBYmlQYXJhbWV0ZXJzLmpzXCI7XG5pbXBvcnQgeyBjb25jYXRIZXggfSBmcm9tIFwiLi4vdXRpbHMvZW5jb2RpbmcvaGVscGVycy9jb25jYXQtaGV4LmpzXCI7XG5pbXBvcnQgeyBFUkNfNjQ5Ml9NQUdJQ19WQUxVRSB9IGZyb20gXCIuL2NvbnN0YW50cy5qc1wiO1xuLyoqXG4gKiBTZXJpYWxpemVzIGEgc2lnbmF0dXJlIGZvciB1c2Ugd2l0aCBbRVJDLTY0OTJdKGh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtNjQ5MikuIFRoZSBzaWduYXR1cmUgbXVzdCBiZSBnZW5lcmF0ZWQgYnkgYSBzaWduZXIgZm9yIGFuIFtFUkMtNDMzN10oaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC00MzM3KSBBY2NvdW50IEZhY3RvcnkgYWNjb3VudCB3aXRoIGNvdW50ZXJmYWN0dWFsIGRlcGxveW1lbnQgYWRkcmVzc2VzLlxuICpcbiAqIEBwYXJhbSB7QGxpbmsgRXJjNjQ5MlNpZ25hdHVyZX0gc2lnbmF0dXJlICBUaGUgc2lnbmF0dXJlIG9iamVjdCB0byBzZXJpYWxpemUgaW50byBIZXggZm9ybWF0XG4gKiBAcGFyYW0ge3N0cmluZ30gc2lnbmF0dXJlLmFkZHJlc3MgVGhlIEVSQy00MzM3IEFjY291bnQgRmFjdG9yeSBhZGRyZXNzXG4gKiBAcGFyYW0ge0hleH0gc2lnbmF0dXJlLmRhdGEgQWNjb3VudCBkZXBsb3ltZW50IGNhbGxkYXRhIChpZiBub3QgZGVwbG95ZWQpIGZvciBjb3VudGVyZmFjdHVhbCB2ZXJpZmljYXRpb25cbiAqIEBwYXJhbSB7SGV4fSBzaWduYXR1cmUuc2lnbmF0dXJlIFRoZSBvcmlnaW5hbCBzaWduYXR1cmVcbiAqXG4gKiBAcmV0dXJucyB7SGV4fSBUaGUgc2VyaWFsaXplZCBzaWduYXR1cmVcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IHNlcmlhbGl6ZUVyYzY0OTJTaWduYXR1cmUgfSBmcm9tICd0aGlyZHdlYi9hdXRoJztcbiAqXG4gKiBjb25zdCBzZXJpYWxpemVkU2lnbmF0dXJlID0gc2VyaWFsaXplRXJjNjQ5MlNpZ25hdHVyZSh7XG4gKiAgYWRkcmVzczogJzB4Li4uJyxcbiAqICBkYXRhOiAnMHguLi4nLFxuICogIHNpZ25hdHVyZTogJzB4Li4uJyxcbiAqIH0pO1xuICogLy8gMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYWZlYmFiZWNhZmViYWJlY2FmZWJhYmVjYWZlYmFiZWNhZmViYWJlMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA2MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA0ZGVhZGJlZWYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNDFhNDYxZjUwOTg4N2JkMTllMzEyYzBjNTg0NjdjZThmZjhlMzAwZDNjMWE5MGI2MDhhNzYwYzViODAzMThlYWYxNWZlNTdjOTZmOTE3NWQ2Y2Q0ZGFhZDQ2NjM3NjNiYWE3ZTc4ODM2ZTA2N2QwMTYzZTlhMmNjZjJmZjc1M2Y1YjFiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA2NDkyNjQ5MjY0OTI2NDkyNjQ5MjY0OTI2NDkyNjQ5MjY0OTI2NDkyNjQ5MjY0OTI2NDkyNjQ5MjY0OTI2NDkyXG4gKiBgYGBcbiAqIEBhdXRoXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemVFcmM2NDkyU2lnbmF0dXJlKHsgYWRkcmVzcywgZGF0YSwgc2lnbmF0dXJlLCB9KSB7XG4gICAgcmV0dXJuIGNvbmNhdEhleChbXG4gICAgICAgIGVuY29kZUFiaVBhcmFtZXRlcnMoW3sgdHlwZTogXCJhZGRyZXNzXCIgfSwgeyB0eXBlOiBcImJ5dGVzXCIgfSwgeyB0eXBlOiBcImJ5dGVzXCIgfV0sIFthZGRyZXNzLCBkYXRhLCBzaWduYXR1cmVdKSxcbiAgICAgICAgRVJDXzY0OTJfTUFHSUNfVkFMVUUsXG4gICAgXSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXJpYWxpemUtZXJjNjQ5Mi1zaWduYXR1cmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/auth/serialize-erc6492-signature.js\n"));

/***/ }),

/***/ "./node_modules/thirdweb/dist/esm/auth/verify-hash.js":
/*!************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/auth/verify-hash.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyEip1271Signature: function() { return /* binding */ verifyEip1271Signature; },\n/* harmony export */   verifyHash: function() { return /* binding */ verifyHash; }\n/* harmony export */ });\n/* harmony import */ var ox_Abi__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ox/Abi */ \"./node_modules/ox/_esm/core/Abi.js\");\n/* harmony import */ var ox_AbiConstructor__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ox/AbiConstructor */ \"./node_modules/ox/_esm/core/AbiConstructor.js\");\n/* harmony import */ var ox_AbiFunction__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ox/AbiFunction */ \"./node_modules/ox/_esm/core/AbiFunction.js\");\n/* harmony import */ var ox_erc6492__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ox/erc6492 */ \"./node_modules/ox/_esm/erc6492/index.js\");\n/* harmony import */ var ox_Signature__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ox/Signature */ \"./node_modules/ox/_esm/core/Signature.js\");\n/* harmony import */ var _contract_contract_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../contract/contract.js */ \"./node_modules/thirdweb/dist/esm/contract/contract.js\");\n/* harmony import */ var _extensions_erc1271_generated_isValidSignature_read_isValidSignature_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../extensions/erc1271/__generated__/isValidSignature/read/isValidSignature.js */ \"./node_modules/thirdweb/dist/esm/extensions/erc1271/__generated__/isValidSignature/read/isValidSignature.js\");\n/* harmony import */ var _rpc_actions_eth_call_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../rpc/actions/eth_call.js */ \"./node_modules/thirdweb/dist/esm/rpc/actions/eth_call.js\");\n/* harmony import */ var _rpc_rpc_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../rpc/rpc.js */ \"./node_modules/thirdweb/dist/esm/rpc/rpc.js\");\n/* harmony import */ var _utils_any_evm_zksync_isZkSyncChain_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/any-evm/zksync/isZkSyncChain.js */ \"./node_modules/thirdweb/dist/esm/utils/any-evm/zksync/isZkSyncChain.js\");\n/* harmony import */ var _utils_bytecode_is_contract_deployed_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/bytecode/is-contract-deployed.js */ \"./node_modules/thirdweb/dist/esm/utils/bytecode/is-contract-deployed.js\");\n/* harmony import */ var _utils_encoding_from_bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/encoding/from-bytes.js */ \"./node_modules/thirdweb/dist/esm/utils/encoding/from-bytes.js\");\n/* harmony import */ var _utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/encoding/hex.js */ \"./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n/* harmony import */ var _serialize_erc6492_signature_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./serialize-erc6492-signature.js */ \"./node_modules/thirdweb/dist/esm/auth/serialize-erc6492-signature.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst ZKSYNC_VALIDATOR_ADDRESS = \"0xfB688330379976DA81eB64Fe4BF50d7401763B9C\";\n/**\n * Verify that an address created the provided signature for a given hash using [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492). This function is interoperable with all wallet types, including EOAs.\n * This function should rarely be used directly, instead use @see {import(\"./verify-signature.js\")} and @see {import(\"./verify-typed-data.js\")}}\n *\n * @param {Hex} options.hash The hash that was signed\n * @param {string | Uint8Array | Signature} options.signature The signature that was signed\n * @param {string} options.address The address that signed the hash\n * @param {ThirdwebClient} options.client The Thirdweb client\n * @param {Chain} options.chain The chain that the address is on. For an EOA, this can be any chain.\n * @param {string} [options.accountFactory.address] The address of the account factory that created the account if using a smart account with a custom account factory\n * @param {Hex} [options.accountFactory.verificationCalldata] The calldata that was used to create the account if using a smart account with a custom account factory\n *\n * @returns {Promise<boolean>} A promise that resolves to `true` if the signature is valid, or `false` otherwise.\n *\n * @example\n * ```ts\n * import { verifyHash } from \"thirdweb/utils\";\n * const isValid = await verifyHash({\n *   hash: \"0x1234\",\n *   signature: \"0x1234\",\n *   address: \"0x1234\",\n *   client,\n *   chain,\n * });\n * ```\n *\n * @auth\n */\nasync function verifyHash({ hash, signature, address, client, chain, accountFactory, }) {\n    const signatureHex = (() => {\n        if ((0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(signature))\n            return signature;\n        if (typeof signature === \"object\" && \"r\" in signature && \"s\" in signature)\n            return ox_Signature__WEBPACK_IMPORTED_MODULE_1__.toHex(signature);\n        if (signature instanceof Uint8Array)\n            return (0,_utils_encoding_from_bytes_js__WEBPACK_IMPORTED_MODULE_2__.fromBytes)(signature, \"hex\");\n        // We should never hit this but TS doesn't know that\n        throw new Error(`Invalid signature type for signature ${signature}: ${typeof signature}`);\n    })();\n    const isDeployed = await (0,_utils_bytecode_is_contract_deployed_js__WEBPACK_IMPORTED_MODULE_3__.isContractDeployed)((0,_contract_contract_js__WEBPACK_IMPORTED_MODULE_4__.getContract)({\n        address,\n        chain,\n        client,\n    }));\n    if (isDeployed) {\n        const validEip1271 = await verifyEip1271Signature({\n            contract: (0,_contract_contract_js__WEBPACK_IMPORTED_MODULE_4__.getContract)({\n                address,\n                chain,\n                client,\n            }),\n            hash,\n            signature: signatureHex,\n        }).catch((err) => {\n            console.error(\"Error verifying EIP-1271 signature\", err);\n            return false;\n        });\n        if (validEip1271) {\n            return true;\n        }\n    }\n    // contract not deployed, use erc6492 validator to verify signature\n    const wrappedSignature = await (async () => {\n        // If no factory is provided, we have to assume its already deployed or is an EOA\n        // TODO: Figure out how to automatically tell if our default factory was used\n        if (!accountFactory)\n            return signatureHex;\n        // If this sigature was already wrapped for ERC-6492, carry on\n        if (ox_erc6492__WEBPACK_IMPORTED_MODULE_5__.WrappedSignature.validate(signatureHex))\n            return signatureHex;\n        // Otherwise, serialize the signature for ERC-6492 validation\n        return (0,_serialize_erc6492_signature_js__WEBPACK_IMPORTED_MODULE_6__.serializeErc6492Signature)({\n            address: accountFactory.address,\n            data: accountFactory.verificationCalldata,\n            signature: signatureHex,\n        });\n    })();\n    let verificationData;\n    const zkSyncChain = await (0,_utils_any_evm_zksync_isZkSyncChain_js__WEBPACK_IMPORTED_MODULE_7__.isZkSyncChain)(chain);\n    const abi = ox_Abi__WEBPACK_IMPORTED_MODULE_8__.from(ox_erc6492__WEBPACK_IMPORTED_MODULE_5__.WrappedSignature.universalSignatureValidatorAbi);\n    if (zkSyncChain) {\n        // zksync chains dont support deploying code with eth_call\n        // need to call a deployed contract instead\n        verificationData = {\n            data: ox_AbiFunction__WEBPACK_IMPORTED_MODULE_9__.encodeData(ox_AbiFunction__WEBPACK_IMPORTED_MODULE_9__.fromAbi(abi, \"isValidSig\"), [address, hash, wrappedSignature]),\n            to: ZKSYNC_VALIDATOR_ADDRESS,\n        };\n    }\n    else {\n        const validatorConstructor = ox_AbiConstructor__WEBPACK_IMPORTED_MODULE_10__.fromAbi(abi);\n        verificationData = {\n            data: ox_AbiConstructor__WEBPACK_IMPORTED_MODULE_10__.encode(validatorConstructor, {\n                args: [address, hash, wrappedSignature],\n                bytecode: ox_erc6492__WEBPACK_IMPORTED_MODULE_5__.WrappedSignature.universalSignatureValidatorBytecode,\n            }),\n        };\n    }\n    const rpcRequest = (0,_rpc_rpc_js__WEBPACK_IMPORTED_MODULE_11__.getRpcClient)({\n        chain,\n        client,\n    });\n    try {\n        const result = await (0,_rpc_actions_eth_call_js__WEBPACK_IMPORTED_MODULE_12__.eth_call)(rpcRequest, verificationData);\n        return (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__.hexToBool)(result);\n    }\n    catch {\n        // Some chains do not support the eth_call simulation and will fail, so we fall back to regular EIP1271 validation\n        const validEip1271 = await verifyEip1271Signature({\n            contract: (0,_contract_contract_js__WEBPACK_IMPORTED_MODULE_4__.getContract)({\n                address,\n                chain,\n                client,\n            }),\n            hash,\n            signature: signatureHex,\n        }).catch((err) => {\n            console.error(\"Error verifying EIP-1271 signature\", err);\n            return false;\n        });\n        if (validEip1271) {\n            return true;\n        }\n        // TODO: Improve overall RPC error handling so we can tell if this was an actual verification failure or some other error\n        // Verification failed somehow\n        return false;\n    }\n}\nconst EIP_1271_MAGIC_VALUE = \"0x1626ba7e\";\nasync function verifyEip1271Signature({ hash, signature, contract, }) {\n    try {\n        const result = await (0,_extensions_erc1271_generated_isValidSignature_read_isValidSignature_js__WEBPACK_IMPORTED_MODULE_13__.isValidSignature)({\n            contract,\n            hash,\n            signature,\n        });\n        return result === EIP_1271_MAGIC_VALUE;\n    }\n    catch (err) {\n        console.error(\"Error verifying EIP-1271 signature\", err);\n        return false;\n    }\n}\n//# sourceMappingURL=verify-hash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/auth/verify-hash.js\n"));

/***/ }),

/***/ "./node_modules/thirdweb/dist/esm/extensions/erc1271/__generated__/isValidSignature/read/isValidSignature.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/extensions/erc1271/__generated__/isValidSignature/read/isValidSignature.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FN_SELECTOR: function() { return /* binding */ FN_SELECTOR; },\n/* harmony export */   decodeIsValidSignatureResult: function() { return /* binding */ decodeIsValidSignatureResult; },\n/* harmony export */   encodeIsValidSignature: function() { return /* binding */ encodeIsValidSignature; },\n/* harmony export */   encodeIsValidSignatureParams: function() { return /* binding */ encodeIsValidSignatureParams; },\n/* harmony export */   isIsValidSignatureSupported: function() { return /* binding */ isIsValidSignatureSupported; },\n/* harmony export */   isValidSignature: function() { return /* binding */ isValidSignature; }\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"./node_modules/viem/_esm/index.js\");\n/* harmony import */ var _transaction_read_contract_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../transaction/read-contract.js */ \"./node_modules/thirdweb/dist/esm/transaction/read-contract.js\");\n/* harmony import */ var _utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../utils/abi/encodeAbiParameters.js */ \"./node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js\");\n/* harmony import */ var _utils_bytecode_detectExtension_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../utils/bytecode/detectExtension.js */ \"./node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js\");\n\n\n\n\nconst FN_SELECTOR = \"0x1626ba7e\";\nconst FN_INPUTS = [\n    {\n        name: \"hash\",\n        type: \"bytes32\",\n    },\n    {\n        name: \"signature\",\n        type: \"bytes\",\n    },\n];\nconst FN_OUTPUTS = [\n    {\n        type: \"bytes4\",\n    },\n];\n/**\n * Checks if the `isValidSignature` method is supported by the given contract.\n * @param availableSelectors An array of 4byte function selectors of the contract. You can get this in various ways, such as using \"whatsabi\" or if you have the ABI of the contract available you can use it to generate the selectors.\n * @returns A boolean indicating if the `isValidSignature` method is supported.\n * @extension ERC1271\n * @example\n * ```ts\n * import { isIsValidSignatureSupported } from \"thirdweb/extensions/erc1271\";\n * const supported = isIsValidSignatureSupported([\"0x...\"]);\n * ```\n */\nfunction isIsValidSignatureSupported(availableSelectors) {\n    return (0,_utils_bytecode_detectExtension_js__WEBPACK_IMPORTED_MODULE_0__.detectMethod)({\n        availableSelectors,\n        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],\n    });\n}\n/**\n * Encodes the parameters for the \"isValidSignature\" function.\n * @param options - The options for the isValidSignature function.\n * @returns The encoded ABI parameters.\n * @extension ERC1271\n * @example\n * ```ts\n * import { encodeIsValidSignatureParams } from \"thirdweb/extensions/erc1271\";\n * const result = encodeIsValidSignatureParams({\n *  hash: ...,\n *  signature: ...,\n * });\n * ```\n */\nfunction encodeIsValidSignatureParams(options) {\n    return (0,_utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.encodeAbiParameters)(FN_INPUTS, [options.hash, options.signature]);\n}\n/**\n * Encodes the \"isValidSignature\" function into a Hex string with its parameters.\n * @param options - The options for the isValidSignature function.\n * @returns The encoded hexadecimal string.\n * @extension ERC1271\n * @example\n * ```ts\n * import { encodeIsValidSignature } from \"thirdweb/extensions/erc1271\";\n * const result = encodeIsValidSignature({\n *  hash: ...,\n *  signature: ...,\n * });\n * ```\n */\nfunction encodeIsValidSignature(options) {\n    // we do a \"manual\" concat here to avoid the overhead of the \"concatHex\" function\n    // we can do this because we know the specific formats of the values\n    return (FN_SELECTOR +\n        encodeIsValidSignatureParams(options).slice(2));\n}\n/**\n * Decodes the result of the isValidSignature function call.\n * @param result - The hexadecimal result to decode.\n * @returns The decoded result as per the FN_OUTPUTS definition.\n * @extension ERC1271\n * @example\n * ```ts\n * import { decodeIsValidSignatureResult } from \"thirdweb/extensions/erc1271\";\n * const result = decodeIsValidSignatureResultResult(\"...\");\n * ```\n */\nfunction decodeIsValidSignatureResult(result) {\n    return (0,viem__WEBPACK_IMPORTED_MODULE_2__.decodeAbiParameters)(FN_OUTPUTS, result)[0];\n}\n/**\n * Calls the \"isValidSignature\" function on the contract.\n * @param options - The options for the isValidSignature function.\n * @returns The parsed result of the function call.\n * @extension ERC1271\n * @example\n * ```ts\n * import { isValidSignature } from \"thirdweb/extensions/erc1271\";\n *\n * const result = await isValidSignature({\n *  contract,\n *  hash: ...,\n *  signature: ...,\n * });\n *\n * ```\n */\nasync function isValidSignature(options) {\n    return (0,_transaction_read_contract_js__WEBPACK_IMPORTED_MODULE_3__.readContract)({\n        contract: options.contract,\n        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],\n        params: [options.hash, options.signature],\n    });\n}\n//# sourceMappingURL=isValidSignature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vZXh0ZW5zaW9ucy9lcmMxMjcxL19fZ2VuZXJhdGVkX18vaXNWYWxpZFNpZ25hdHVyZS9yZWFkL2lzVmFsaWRTaWduYXR1cmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUEyQztBQUNnQztBQUNXO0FBQ047QUFDekU7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksOEJBQThCO0FBQzFDO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyxnRkFBWTtBQUN2QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLCtCQUErQjtBQUMzQztBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNPO0FBQ1AsV0FBVyxzRkFBbUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVkseUJBQXlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLCtCQUErQjtBQUMzQztBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcseURBQW1CO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1CQUFtQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVywyRUFBWTtBQUN2QjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vZXh0ZW5zaW9ucy9lcmMxMjcxL19fZ2VuZXJhdGVkX18vaXNWYWxpZFNpZ25hdHVyZS9yZWFkL2lzVmFsaWRTaWduYXR1cmUuanM/Y2E0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWNvZGVBYmlQYXJhbWV0ZXJzIH0gZnJvbSBcInZpZW1cIjtcbmltcG9ydCB7IHJlYWRDb250cmFjdCB9IGZyb20gXCIuLi8uLi8uLi8uLi8uLi90cmFuc2FjdGlvbi9yZWFkLWNvbnRyYWN0LmpzXCI7XG5pbXBvcnQgeyBlbmNvZGVBYmlQYXJhbWV0ZXJzIH0gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL3V0aWxzL2FiaS9lbmNvZGVBYmlQYXJhbWV0ZXJzLmpzXCI7XG5pbXBvcnQgeyBkZXRlY3RNZXRob2QgfSBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vdXRpbHMvYnl0ZWNvZGUvZGV0ZWN0RXh0ZW5zaW9uLmpzXCI7XG5leHBvcnQgY29uc3QgRk5fU0VMRUNUT1IgPSBcIjB4MTYyNmJhN2VcIjtcbmNvbnN0IEZOX0lOUFVUUyA9IFtcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiaGFzaFwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzMzJcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogXCJzaWduYXR1cmVcIixcbiAgICAgICAgdHlwZTogXCJieXRlc1wiLFxuICAgIH0sXG5dO1xuY29uc3QgRk5fT1VUUFVUUyA9IFtcbiAgICB7XG4gICAgICAgIHR5cGU6IFwiYnl0ZXM0XCIsXG4gICAgfSxcbl07XG4vKipcbiAqIENoZWNrcyBpZiB0aGUgYGlzVmFsaWRTaWduYXR1cmVgIG1ldGhvZCBpcyBzdXBwb3J0ZWQgYnkgdGhlIGdpdmVuIGNvbnRyYWN0LlxuICogQHBhcmFtIGF2YWlsYWJsZVNlbGVjdG9ycyBBbiBhcnJheSBvZiA0Ynl0ZSBmdW5jdGlvbiBzZWxlY3RvcnMgb2YgdGhlIGNvbnRyYWN0LiBZb3UgY2FuIGdldCB0aGlzIGluIHZhcmlvdXMgd2F5cywgc3VjaCBhcyB1c2luZyBcIndoYXRzYWJpXCIgb3IgaWYgeW91IGhhdmUgdGhlIEFCSSBvZiB0aGUgY29udHJhY3QgYXZhaWxhYmxlIHlvdSBjYW4gdXNlIGl0IHRvIGdlbmVyYXRlIHRoZSBzZWxlY3RvcnMuXG4gKiBAcmV0dXJucyBBIGJvb2xlYW4gaW5kaWNhdGluZyBpZiB0aGUgYGlzVmFsaWRTaWduYXR1cmVgIG1ldGhvZCBpcyBzdXBwb3J0ZWQuXG4gKiBAZXh0ZW5zaW9uIEVSQzEyNzFcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgaXNJc1ZhbGlkU2lnbmF0dXJlU3VwcG9ydGVkIH0gZnJvbSBcInRoaXJkd2ViL2V4dGVuc2lvbnMvZXJjMTI3MVwiO1xuICogY29uc3Qgc3VwcG9ydGVkID0gaXNJc1ZhbGlkU2lnbmF0dXJlU3VwcG9ydGVkKFtcIjB4Li4uXCJdKTtcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNJc1ZhbGlkU2lnbmF0dXJlU3VwcG9ydGVkKGF2YWlsYWJsZVNlbGVjdG9ycykge1xuICAgIHJldHVybiBkZXRlY3RNZXRob2Qoe1xuICAgICAgICBhdmFpbGFibGVTZWxlY3RvcnMsXG4gICAgICAgIG1ldGhvZDogW0ZOX1NFTEVDVE9SLCBGTl9JTlBVVFMsIEZOX09VVFBVVFNdLFxuICAgIH0pO1xufVxuLyoqXG4gKiBFbmNvZGVzIHRoZSBwYXJhbWV0ZXJzIGZvciB0aGUgXCJpc1ZhbGlkU2lnbmF0dXJlXCIgZnVuY3Rpb24uXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIGZvciB0aGUgaXNWYWxpZFNpZ25hdHVyZSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIFRoZSBlbmNvZGVkIEFCSSBwYXJhbWV0ZXJzLlxuICogQGV4dGVuc2lvbiBFUkMxMjcxXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGVuY29kZUlzVmFsaWRTaWduYXR1cmVQYXJhbXMgfSBmcm9tIFwidGhpcmR3ZWIvZXh0ZW5zaW9ucy9lcmMxMjcxXCI7XG4gKiBjb25zdCByZXN1bHQgPSBlbmNvZGVJc1ZhbGlkU2lnbmF0dXJlUGFyYW1zKHtcbiAqICBoYXNoOiAuLi4sXG4gKiAgc2lnbmF0dXJlOiAuLi4sXG4gKiB9KTtcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlSXNWYWxpZFNpZ25hdHVyZVBhcmFtcyhvcHRpb25zKSB7XG4gICAgcmV0dXJuIGVuY29kZUFiaVBhcmFtZXRlcnMoRk5fSU5QVVRTLCBbb3B0aW9ucy5oYXNoLCBvcHRpb25zLnNpZ25hdHVyZV0pO1xufVxuLyoqXG4gKiBFbmNvZGVzIHRoZSBcImlzVmFsaWRTaWduYXR1cmVcIiBmdW5jdGlvbiBpbnRvIGEgSGV4IHN0cmluZyB3aXRoIGl0cyBwYXJhbWV0ZXJzLlxuICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyBmb3IgdGhlIGlzVmFsaWRTaWduYXR1cmUgZnVuY3Rpb24uXG4gKiBAcmV0dXJucyBUaGUgZW5jb2RlZCBoZXhhZGVjaW1hbCBzdHJpbmcuXG4gKiBAZXh0ZW5zaW9uIEVSQzEyNzFcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgZW5jb2RlSXNWYWxpZFNpZ25hdHVyZSB9IGZyb20gXCJ0aGlyZHdlYi9leHRlbnNpb25zL2VyYzEyNzFcIjtcbiAqIGNvbnN0IHJlc3VsdCA9IGVuY29kZUlzVmFsaWRTaWduYXR1cmUoe1xuICogIGhhc2g6IC4uLixcbiAqICBzaWduYXR1cmU6IC4uLixcbiAqIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVJc1ZhbGlkU2lnbmF0dXJlKG9wdGlvbnMpIHtcbiAgICAvLyB3ZSBkbyBhIFwibWFudWFsXCIgY29uY2F0IGhlcmUgdG8gYXZvaWQgdGhlIG92ZXJoZWFkIG9mIHRoZSBcImNvbmNhdEhleFwiIGZ1bmN0aW9uXG4gICAgLy8gd2UgY2FuIGRvIHRoaXMgYmVjYXVzZSB3ZSBrbm93IHRoZSBzcGVjaWZpYyBmb3JtYXRzIG9mIHRoZSB2YWx1ZXNcbiAgICByZXR1cm4gKEZOX1NFTEVDVE9SICtcbiAgICAgICAgZW5jb2RlSXNWYWxpZFNpZ25hdHVyZVBhcmFtcyhvcHRpb25zKS5zbGljZSgyKSk7XG59XG4vKipcbiAqIERlY29kZXMgdGhlIHJlc3VsdCBvZiB0aGUgaXNWYWxpZFNpZ25hdHVyZSBmdW5jdGlvbiBjYWxsLlxuICogQHBhcmFtIHJlc3VsdCAtIFRoZSBoZXhhZGVjaW1hbCByZXN1bHQgdG8gZGVjb2RlLlxuICogQHJldHVybnMgVGhlIGRlY29kZWQgcmVzdWx0IGFzIHBlciB0aGUgRk5fT1VUUFVUUyBkZWZpbml0aW9uLlxuICogQGV4dGVuc2lvbiBFUkMxMjcxXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGRlY29kZUlzVmFsaWRTaWduYXR1cmVSZXN1bHQgfSBmcm9tIFwidGhpcmR3ZWIvZXh0ZW5zaW9ucy9lcmMxMjcxXCI7XG4gKiBjb25zdCByZXN1bHQgPSBkZWNvZGVJc1ZhbGlkU2lnbmF0dXJlUmVzdWx0UmVzdWx0KFwiLi4uXCIpO1xuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVJc1ZhbGlkU2lnbmF0dXJlUmVzdWx0KHJlc3VsdCkge1xuICAgIHJldHVybiBkZWNvZGVBYmlQYXJhbWV0ZXJzKEZOX09VVFBVVFMsIHJlc3VsdClbMF07XG59XG4vKipcbiAqIENhbGxzIHRoZSBcImlzVmFsaWRTaWduYXR1cmVcIiBmdW5jdGlvbiBvbiB0aGUgY29udHJhY3QuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIGZvciB0aGUgaXNWYWxpZFNpZ25hdHVyZSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIFRoZSBwYXJzZWQgcmVzdWx0IG9mIHRoZSBmdW5jdGlvbiBjYWxsLlxuICogQGV4dGVuc2lvbiBFUkMxMjcxXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGlzVmFsaWRTaWduYXR1cmUgfSBmcm9tIFwidGhpcmR3ZWIvZXh0ZW5zaW9ucy9lcmMxMjcxXCI7XG4gKlxuICogY29uc3QgcmVzdWx0ID0gYXdhaXQgaXNWYWxpZFNpZ25hdHVyZSh7XG4gKiAgY29udHJhY3QsXG4gKiAgaGFzaDogLi4uLFxuICogIHNpZ25hdHVyZTogLi4uLFxuICogfSk7XG4gKlxuICogYGBgXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpc1ZhbGlkU2lnbmF0dXJlKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gcmVhZENvbnRyYWN0KHtcbiAgICAgICAgY29udHJhY3Q6IG9wdGlvbnMuY29udHJhY3QsXG4gICAgICAgIG1ldGhvZDogW0ZOX1NFTEVDVE9SLCBGTl9JTlBVVFMsIEZOX09VVFBVVFNdLFxuICAgICAgICBwYXJhbXM6IFtvcHRpb25zLmhhc2gsIG9wdGlvbnMuc2lnbmF0dXJlXSxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzVmFsaWRTaWduYXR1cmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/extensions/erc1271/__generated__/isValidSignature/read/isValidSignature.js\n"));

/***/ }),

/***/ "./node_modules/thirdweb/dist/esm/utils/encoding/from-bytes.js":
/*!*********************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/encoding/from-bytes.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bytesToBigInt: function() { return /* binding */ bytesToBigInt; },\n/* harmony export */   bytesToBool: function() { return /* binding */ bytesToBool; },\n/* harmony export */   bytesToNumber: function() { return /* binding */ bytesToNumber; },\n/* harmony export */   bytesToString: function() { return /* binding */ bytesToString; },\n/* harmony export */   fromBytes: function() { return /* binding */ fromBytes; }\n/* harmony export */ });\n/* harmony import */ var ox_Bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ox/Bytes */ \"./node_modules/ox/_esm/core/Bytes.js\");\n/* harmony import */ var _hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hex.js */ \"./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n\n\n/**\n * Converts a Uint8Array to the specified type.\n * @param bytes - The Uint8Array to convert.\n * @param toOrOpts - The target type or conversion options.\n * @returns The converted value of the specified type.\n * @example\n * ```ts\n * import { fromBytes } from \"thirdweb/utils\";\n * const bytes = new Uint8Array([1, 164]);\n * const number = fromBytes(bytes, \"number\");\n * console.log(number); // 420\n * ```\n * @utils\n */\nfunction fromBytes(bytes, toOrOpts) {\n    const opts = typeof toOrOpts === \"string\" ? { to: toOrOpts } : toOrOpts;\n    switch (opts.to) {\n        case \"number\":\n            return bytesToNumber(bytes, opts);\n        case \"bigint\":\n            return bytesToBigInt(bytes, opts);\n        case \"boolean\":\n            return bytesToBool(bytes, opts);\n        case \"string\":\n            return bytesToString(bytes, opts);\n        default:\n            return (0,_hex_js__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToHex)(bytes, opts);\n    }\n}\n/**\n * Converts a Uint8Array of bytes to a bigint.\n * @param bytes - The Uint8Array of bytes to convert.\n * @param opts - Optional parameters for the conversion.\n * @returns The converted bigint.\n * @example\n * ```ts\n * import { bytesToBigInt } from \"thirdweb/utils\";\n * const bytes = new Uint8Array([1, 164]);\n * const bigInt = bytesToBigInt(bytes);\n * console.log(bigInt); // 420n\n * ```\n * @utils\n */\nfunction bytesToBigInt(bytes, opts = {}) {\n    return ox_Bytes__WEBPACK_IMPORTED_MODULE_1__.toBigInt(bytes, opts);\n}\n/**\n * Converts a byte array to a boolean value.\n * @param bytes_ - The byte array to convert.\n * @param opts - Optional parameters for the conversion.\n * @returns The boolean value converted from the byte array.\n * @throws Error if the byte array is invalid or the boolean representation is invalid.\n * @example\n * ```ts\n * import { bytesToBool } from \"thirdweb/utils\";\n * const bytes = new Uint8Array([1]);\n * const bool = bytesToBool(bytes);\n * console.log(bool); // true\n * ```\n * @utils\n */\nfunction bytesToBool(bytes_, opts = {}) {\n    return ox_Bytes__WEBPACK_IMPORTED_MODULE_1__.toBoolean(bytes_, opts);\n}\n/**\n * Converts a Uint8Array of bytes to a number.\n * @param bytes - The Uint8Array of bytes to convert.\n * @param opts - Optional configuration options.\n * @returns The converted number.\n * @example\n * ```ts\n * import { bytesToNumber } from \"thirdweb/utils\";\n * const bytes = new Uint8Array([1, 164]);\n * const number = bytesToNumber(bytes);\n * console.log(number); // 420\n * ```\n * @utils\n */\nfunction bytesToNumber(bytes, opts = {}) {\n    return ox_Bytes__WEBPACK_IMPORTED_MODULE_1__.toNumber(bytes, opts);\n}\n/**\n * Converts an array of bytes to a string using UTF-8 encoding.\n * @param bytes_ - The array of bytes to convert.\n * @param opts - Optional parameters for the conversion.\n * @returns The resulting string.\n * @example\n * ```ts\n * import { bytesToString } from \"thirdweb/utils\";\n * const bytes = new Uint8Array([72, 101, 108, 108, 111]);\n * const string = bytesToString(bytes);\n * console.log(string); // \"Hello\"\n * ```\n * @utils\n */\nfunction bytesToString(bytes_, opts = {}) {\n    return ox_Bytes__WEBPACK_IMPORTED_MODULE_1__.toString(bytes_, opts);\n}\n//# sourceMappingURL=from-bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvZW5jb2RpbmcvZnJvbS1ieXRlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXNDO0FBQ0s7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFlBQVk7QUFDeEI7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDTztBQUNQLGtEQUFrRCxlQUFlO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHdEQUFlO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZ0JBQWdCO0FBQzVCO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ08sdUNBQXVDO0FBQzlDLFdBQVcsOENBQWtCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksY0FBYztBQUMxQjtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNPLHNDQUFzQztBQUM3QyxXQUFXLCtDQUFtQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxnQkFBZ0I7QUFDNUI7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDTyx1Q0FBdUM7QUFDOUMsV0FBVyw4Q0FBa0I7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZ0JBQWdCO0FBQzVCO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ08sd0NBQXdDO0FBQy9DLFdBQVcsOENBQWtCO0FBQzdCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL3V0aWxzL2VuY29kaW5nL2Zyb20tYnl0ZXMuanM/NDE2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBveF9fQnl0ZXMgZnJvbSBcIm94L0J5dGVzXCI7XG5pbXBvcnQgeyB1aW50OEFycmF5VG9IZXggfSBmcm9tIFwiLi9oZXguanNcIjtcbi8qKlxuICogQ29udmVydHMgYSBVaW50OEFycmF5IHRvIHRoZSBzcGVjaWZpZWQgdHlwZS5cbiAqIEBwYXJhbSBieXRlcyAtIFRoZSBVaW50OEFycmF5IHRvIGNvbnZlcnQuXG4gKiBAcGFyYW0gdG9Pck9wdHMgLSBUaGUgdGFyZ2V0IHR5cGUgb3IgY29udmVyc2lvbiBvcHRpb25zLlxuICogQHJldHVybnMgVGhlIGNvbnZlcnRlZCB2YWx1ZSBvZiB0aGUgc3BlY2lmaWVkIHR5cGUuXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGZyb21CeXRlcyB9IGZyb20gXCJ0aGlyZHdlYi91dGlsc1wiO1xuICogY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShbMSwgMTY0XSk7XG4gKiBjb25zdCBudW1iZXIgPSBmcm9tQnl0ZXMoYnl0ZXMsIFwibnVtYmVyXCIpO1xuICogY29uc29sZS5sb2cobnVtYmVyKTsgLy8gNDIwXG4gKiBgYGBcbiAqIEB1dGlsc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZnJvbUJ5dGVzKGJ5dGVzLCB0b09yT3B0cykge1xuICAgIGNvbnN0IG9wdHMgPSB0eXBlb2YgdG9Pck9wdHMgPT09IFwic3RyaW5nXCIgPyB7IHRvOiB0b09yT3B0cyB9IDogdG9Pck9wdHM7XG4gICAgc3dpdGNoIChvcHRzLnRvKSB7XG4gICAgICAgIGNhc2UgXCJudW1iZXJcIjpcbiAgICAgICAgICAgIHJldHVybiBieXRlc1RvTnVtYmVyKGJ5dGVzLCBvcHRzKTtcbiAgICAgICAgY2FzZSBcImJpZ2ludFwiOlxuICAgICAgICAgICAgcmV0dXJuIGJ5dGVzVG9CaWdJbnQoYnl0ZXMsIG9wdHMpO1xuICAgICAgICBjYXNlIFwiYm9vbGVhblwiOlxuICAgICAgICAgICAgcmV0dXJuIGJ5dGVzVG9Cb29sKGJ5dGVzLCBvcHRzKTtcbiAgICAgICAgY2FzZSBcInN0cmluZ1wiOlxuICAgICAgICAgICAgcmV0dXJuIGJ5dGVzVG9TdHJpbmcoYnl0ZXMsIG9wdHMpO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHVpbnQ4QXJyYXlUb0hleChieXRlcywgb3B0cyk7XG4gICAgfVxufVxuLyoqXG4gKiBDb252ZXJ0cyBhIFVpbnQ4QXJyYXkgb2YgYnl0ZXMgdG8gYSBiaWdpbnQuXG4gKiBAcGFyYW0gYnl0ZXMgLSBUaGUgVWludDhBcnJheSBvZiBieXRlcyB0byBjb252ZXJ0LlxuICogQHBhcmFtIG9wdHMgLSBPcHRpb25hbCBwYXJhbWV0ZXJzIGZvciB0aGUgY29udmVyc2lvbi5cbiAqIEByZXR1cm5zIFRoZSBjb252ZXJ0ZWQgYmlnaW50LlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBieXRlc1RvQmlnSW50IH0gZnJvbSBcInRoaXJkd2ViL3V0aWxzXCI7XG4gKiBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KFsxLCAxNjRdKTtcbiAqIGNvbnN0IGJpZ0ludCA9IGJ5dGVzVG9CaWdJbnQoYnl0ZXMpO1xuICogY29uc29sZS5sb2coYmlnSW50KTsgLy8gNDIwblxuICogYGBgXG4gKiBAdXRpbHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJ5dGVzVG9CaWdJbnQoYnl0ZXMsIG9wdHMgPSB7fSkge1xuICAgIHJldHVybiBveF9fQnl0ZXMudG9CaWdJbnQoYnl0ZXMsIG9wdHMpO1xufVxuLyoqXG4gKiBDb252ZXJ0cyBhIGJ5dGUgYXJyYXkgdG8gYSBib29sZWFuIHZhbHVlLlxuICogQHBhcmFtIGJ5dGVzXyAtIFRoZSBieXRlIGFycmF5IHRvIGNvbnZlcnQuXG4gKiBAcGFyYW0gb3B0cyAtIE9wdGlvbmFsIHBhcmFtZXRlcnMgZm9yIHRoZSBjb252ZXJzaW9uLlxuICogQHJldHVybnMgVGhlIGJvb2xlYW4gdmFsdWUgY29udmVydGVkIGZyb20gdGhlIGJ5dGUgYXJyYXkuXG4gKiBAdGhyb3dzIEVycm9yIGlmIHRoZSBieXRlIGFycmF5IGlzIGludmFsaWQgb3IgdGhlIGJvb2xlYW4gcmVwcmVzZW50YXRpb24gaXMgaW52YWxpZC5cbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgYnl0ZXNUb0Jvb2wgfSBmcm9tIFwidGhpcmR3ZWIvdXRpbHNcIjtcbiAqIGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoWzFdKTtcbiAqIGNvbnN0IGJvb2wgPSBieXRlc1RvQm9vbChieXRlcyk7XG4gKiBjb25zb2xlLmxvZyhib29sKTsgLy8gdHJ1ZVxuICogYGBgXG4gKiBAdXRpbHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJ5dGVzVG9Cb29sKGJ5dGVzXywgb3B0cyA9IHt9KSB7XG4gICAgcmV0dXJuIG94X19CeXRlcy50b0Jvb2xlYW4oYnl0ZXNfLCBvcHRzKTtcbn1cbi8qKlxuICogQ29udmVydHMgYSBVaW50OEFycmF5IG9mIGJ5dGVzIHRvIGEgbnVtYmVyLlxuICogQHBhcmFtIGJ5dGVzIC0gVGhlIFVpbnQ4QXJyYXkgb2YgYnl0ZXMgdG8gY29udmVydC5cbiAqIEBwYXJhbSBvcHRzIC0gT3B0aW9uYWwgY29uZmlndXJhdGlvbiBvcHRpb25zLlxuICogQHJldHVybnMgVGhlIGNvbnZlcnRlZCBudW1iZXIuXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGJ5dGVzVG9OdW1iZXIgfSBmcm9tIFwidGhpcmR3ZWIvdXRpbHNcIjtcbiAqIGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoWzEsIDE2NF0pO1xuICogY29uc3QgbnVtYmVyID0gYnl0ZXNUb051bWJlcihieXRlcyk7XG4gKiBjb25zb2xlLmxvZyhudW1iZXIpOyAvLyA0MjBcbiAqIGBgYFxuICogQHV0aWxzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBieXRlc1RvTnVtYmVyKGJ5dGVzLCBvcHRzID0ge30pIHtcbiAgICByZXR1cm4gb3hfX0J5dGVzLnRvTnVtYmVyKGJ5dGVzLCBvcHRzKTtcbn1cbi8qKlxuICogQ29udmVydHMgYW4gYXJyYXkgb2YgYnl0ZXMgdG8gYSBzdHJpbmcgdXNpbmcgVVRGLTggZW5jb2RpbmcuXG4gKiBAcGFyYW0gYnl0ZXNfIC0gVGhlIGFycmF5IG9mIGJ5dGVzIHRvIGNvbnZlcnQuXG4gKiBAcGFyYW0gb3B0cyAtIE9wdGlvbmFsIHBhcmFtZXRlcnMgZm9yIHRoZSBjb252ZXJzaW9uLlxuICogQHJldHVybnMgVGhlIHJlc3VsdGluZyBzdHJpbmcuXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGJ5dGVzVG9TdHJpbmcgfSBmcm9tIFwidGhpcmR3ZWIvdXRpbHNcIjtcbiAqIGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoWzcyLCAxMDEsIDEwOCwgMTA4LCAxMTFdKTtcbiAqIGNvbnN0IHN0cmluZyA9IGJ5dGVzVG9TdHJpbmcoYnl0ZXMpO1xuICogY29uc29sZS5sb2coc3RyaW5nKTsgLy8gXCJIZWxsb1wiXG4gKiBgYGBcbiAqIEB1dGlsc1xuICovXG5leHBvcnQgZnVuY3Rpb24gYnl0ZXNUb1N0cmluZyhieXRlc18sIG9wdHMgPSB7fSkge1xuICAgIHJldHVybiBveF9fQnl0ZXMudG9TdHJpbmcoYnl0ZXNfLCBvcHRzKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZyb20tYnl0ZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/utils/encoding/from-bytes.js\n"));

/***/ }),

/***/ "./node_modules/thirdweb/dist/esm/utils/hashing/hashMessage.js":
/*!*********************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/hashing/hashMessage.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hashMessage: function() { return /* binding */ hashMessage; }\n/* harmony export */ });\n/* harmony import */ var ox_Bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ox/Bytes */ \"./node_modules/ox/_esm/core/Bytes.js\");\n/* harmony import */ var _encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encoding/to-bytes.js */ \"./node_modules/thirdweb/dist/esm/utils/encoding/to-bytes.js\");\n/* harmony import */ var _keccak256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keccak256.js */ \"./node_modules/thirdweb/dist/esm/utils/hashing/keccak256.js\");\n\n\n\nconst presignMessagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n/**\n * Ethereum Signed Message hashing\n * @param message - The message to hash, either as a string, a Uint8Array, or an object with a `raw` property containing a Uint8Array.\n * @param to_ - The desired output format of the hash (optional). Defaults to 'hex'.\n * @example\n * ```ts\n * import { hashMessage } from \"thirdweb/utils\";\n * const hash = hashMessage(\"hello world\");\n * ```\n * @returns The Ethereum Signed Message hash of the message in the specified format.\n * @utils\n */\nfunction hashMessage(message, to_) {\n    const messageBytes = (() => {\n        if (typeof message === \"string\") {\n            return (0,_encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_0__.stringToBytes)(message);\n        }\n        if (message.raw instanceof Uint8Array) {\n            return message.raw;\n        }\n        return (0,_encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(message.raw);\n    })();\n    const prefixBytes = (0,_encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_0__.stringToBytes)(`${presignMessagePrefix}${messageBytes.length}`);\n    return (0,_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(ox_Bytes__WEBPACK_IMPORTED_MODULE_2__.concat(prefixBytes, messageBytes), to_);\n}\n//# sourceMappingURL=hashMessage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvaGFzaGluZy9oYXNoTWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXNDO0FBQzJCO0FBQ3RCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxjQUFjO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxtQkFBbUIsb0VBQWE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDhEQUFPO0FBQ3RCLEtBQUs7QUFDTCx3QkFBd0Isb0VBQWEsSUFBSSxxQkFBcUIsRUFBRSxvQkFBb0I7QUFDcEYsV0FBVyx3REFBUyxDQUFDLDRDQUFnQjtBQUNyQztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9oYXNoaW5nL2hhc2hNZXNzYWdlLmpzPzJkYzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgb3hfX0J5dGVzIGZyb20gXCJveC9CeXRlc1wiO1xuaW1wb3J0IHsgc3RyaW5nVG9CeXRlcywgdG9CeXRlcyB9IGZyb20gXCIuLi9lbmNvZGluZy90by1ieXRlcy5qc1wiO1xuaW1wb3J0IHsga2VjY2FrMjU2IH0gZnJvbSBcIi4va2VjY2FrMjU2LmpzXCI7XG5jb25zdCBwcmVzaWduTWVzc2FnZVByZWZpeCA9IFwiXFx4MTlFdGhlcmV1bSBTaWduZWQgTWVzc2FnZTpcXG5cIjtcbi8qKlxuICogRXRoZXJldW0gU2lnbmVkIE1lc3NhZ2UgaGFzaGluZ1xuICogQHBhcmFtIG1lc3NhZ2UgLSBUaGUgbWVzc2FnZSB0byBoYXNoLCBlaXRoZXIgYXMgYSBzdHJpbmcsIGEgVWludDhBcnJheSwgb3IgYW4gb2JqZWN0IHdpdGggYSBgcmF3YCBwcm9wZXJ0eSBjb250YWluaW5nIGEgVWludDhBcnJheS5cbiAqIEBwYXJhbSB0b18gLSBUaGUgZGVzaXJlZCBvdXRwdXQgZm9ybWF0IG9mIHRoZSBoYXNoIChvcHRpb25hbCkuIERlZmF1bHRzIHRvICdoZXgnLlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBoYXNoTWVzc2FnZSB9IGZyb20gXCJ0aGlyZHdlYi91dGlsc1wiO1xuICogY29uc3QgaGFzaCA9IGhhc2hNZXNzYWdlKFwiaGVsbG8gd29ybGRcIik7XG4gKiBgYGBcbiAqIEByZXR1cm5zIFRoZSBFdGhlcmV1bSBTaWduZWQgTWVzc2FnZSBoYXNoIG9mIHRoZSBtZXNzYWdlIGluIHRoZSBzcGVjaWZpZWQgZm9ybWF0LlxuICogQHV0aWxzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoYXNoTWVzc2FnZShtZXNzYWdlLCB0b18pIHtcbiAgICBjb25zdCBtZXNzYWdlQnl0ZXMgPSAoKCkgPT4ge1xuICAgICAgICBpZiAodHlwZW9mIG1lc3NhZ2UgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBzdHJpbmdUb0J5dGVzKG1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtZXNzYWdlLnJhdyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgICAgIHJldHVybiBtZXNzYWdlLnJhdztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdG9CeXRlcyhtZXNzYWdlLnJhdyk7XG4gICAgfSkoKTtcbiAgICBjb25zdCBwcmVmaXhCeXRlcyA9IHN0cmluZ1RvQnl0ZXMoYCR7cHJlc2lnbk1lc3NhZ2VQcmVmaXh9JHttZXNzYWdlQnl0ZXMubGVuZ3RofWApO1xuICAgIHJldHVybiBrZWNjYWsyNTYob3hfX0J5dGVzLmNvbmNhdChwcmVmaXhCeXRlcywgbWVzc2FnZUJ5dGVzKSwgdG9fKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2hNZXNzYWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/utils/hashing/hashMessage.js\n"));

/***/ }),

/***/ "./node_modules/thirdweb/dist/esm/utils/hashing/hashTypedData.js":
/*!***********************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/hashing/hashTypedData.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hashTypedData: function() { return /* binding */ hashTypedData; }\n/* harmony export */ });\n/* harmony import */ var ox_Bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ox/Bytes */ \"./node_modules/ox/_esm/core/Bytes.js\");\n/* harmony import */ var ox_TypedData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ox/TypedData */ \"./node_modules/ox/_esm/core/TypedData.js\");\n/* harmony import */ var _abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../abi/encodeAbiParameters.js */ \"./node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js\");\n/* harmony import */ var _encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../encoding/hex.js */ \"./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n/* harmony import */ var _keccak256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keccak256.js */ \"./node_modules/thirdweb/dist/esm/utils/hashing/keccak256.js\");\n\n\n\n\n\n/**\n * @internal\n */\nfunction hashTypedData(parameters) {\n    const { domain = {}, message, primaryType, } = parameters;\n    const types = {\n        EIP712Domain: ox_TypedData__WEBPACK_IMPORTED_MODULE_0__.extractEip712DomainTypes(domain),\n        ...parameters.types,\n    };\n    // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n    // as we can't statically check this with TypeScript.\n    ox_TypedData__WEBPACK_IMPORTED_MODULE_0__.validate({\n        domain,\n        message,\n        primaryType,\n        types,\n    });\n    const parts = [\"0x1901\"];\n    if (domain)\n        parts.push(ox_TypedData__WEBPACK_IMPORTED_MODULE_0__.hashDomain({\n            domain,\n            types: types,\n        }));\n    if (primaryType !== \"EIP712Domain\") {\n        const hashedStruct = (() => {\n            const encoded = encodeData({\n                data: message,\n                primaryType,\n                types: types,\n            });\n            return (0,_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(encoded);\n        })();\n        parts.push(hashedStruct);\n    }\n    return (0,_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(ox_Bytes__WEBPACK_IMPORTED_MODULE_2__.concat(...parts.map((p) => ox_Bytes__WEBPACK_IMPORTED_MODULE_2__.fromHex(p))));\n}\nfunction encodeData({ data, primaryType, types, }) {\n    const encodedTypes = [{ type: \"bytes32\" }];\n    const encodedValues = [hashType({ primaryType, types })];\n    if (!types[primaryType])\n        throw new Error(\"Invalid types\");\n    for (const field of types[primaryType]) {\n        const [type, value] = encodeField({\n            name: field.name,\n            type: field.type,\n            types,\n            value: data[field.name],\n        });\n        encodedTypes.push(type);\n        encodedValues.push(value);\n    }\n    return (0,_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_3__.encodeAbiParameters)(encodedTypes, encodedValues);\n}\nfunction hashType({ primaryType, types, }) {\n    const encodedHashType = (0,_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(encodeType({ primaryType, types }));\n    return (0,_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(encodedHashType);\n}\nfunction encodeType({ primaryType, types, }) {\n    let result = \"\";\n    const unsortedDeps = findTypeDependencies({ primaryType, types });\n    unsortedDeps.delete(primaryType);\n    const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n    for (const type of deps) {\n        if (!types[type])\n            throw new Error(\"Invalid types\");\n        result += `${type}(${types[type]\n            .map(({ name, type: t }) => `${t} ${name}`)\n            .join(\",\")})`;\n    }\n    return result;\n}\nfunction findTypeDependencies({ primaryType: primaryType_, types, }, results = new Set()) {\n    const match = primaryType_.match(/^\\w*/u);\n    const primaryType = match?.[0];\n    if (results.has(primaryType) || types[primaryType] === undefined) {\n        return results;\n    }\n    results.add(primaryType);\n    for (const field of types[primaryType]) {\n        findTypeDependencies({ primaryType: field.type, types }, results);\n    }\n    return results;\n}\nfunction encodeField({ types, name, type, value, }) {\n    if (types[type] !== undefined) {\n        return [\n            { type: \"bytes32\" },\n            (0,_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(encodeData({ data: value, primaryType: type, types })),\n        ];\n    }\n    if (type === \"bytes\") {\n        const prepend = value.length % 2 ? \"0\" : \"\";\n        value = `0x${prepend + value.slice(2)}`;\n        return [{ type: \"bytes32\" }, (0,_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(value)];\n    }\n    if (type === \"string\")\n        return [{ type: \"bytes32\" }, (0,_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)((0,_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(value))];\n    if (type.lastIndexOf(\"]\") === type.length - 1) {\n        const parsedType = type.slice(0, type.lastIndexOf(\"[\"));\n        const typeValuePairs = \n        // biome-ignore lint/suspicious/noExplicitAny: Can't anticipate types of nested values\n        value.map((item) => encodeField({\n            name,\n            type: parsedType,\n            types,\n            value: item,\n        }));\n        return [\n            { type: \"bytes32\" },\n            (0,_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)((0,_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_3__.encodeAbiParameters)(typeValuePairs.map(([t]) => t), typeValuePairs.map(([, v]) => v))),\n        ];\n    }\n    return [{ type }, value];\n}\n//# sourceMappingURL=hashTypedData.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvaGFzaGluZy9oYXNoVHlwZWREYXRhLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzQztBQUNRO0FBQ3NCO0FBQ3pCO0FBQ0E7QUFDM0M7QUFDQTtBQUNBO0FBQ087QUFDUCxZQUFZLFdBQVcsMEJBQTBCO0FBQ2pEO0FBQ0Esc0JBQXNCLGtFQUFzQztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksa0RBQXNCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxtQkFBbUIsb0RBQXdCO0FBQzNDO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLG1CQUFtQix3REFBUztBQUM1QixTQUFTO0FBQ1Q7QUFDQTtBQUNBLFdBQVcsd0RBQVMsQ0FBQyw0Q0FBZ0IscUJBQXFCLDZDQUFpQjtBQUMzRTtBQUNBLHNCQUFzQiwyQkFBMkI7QUFDakQsNEJBQTRCLGlCQUFpQjtBQUM3QyxzQ0FBc0Msb0JBQW9CO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnRkFBbUI7QUFDOUI7QUFDQSxvQkFBb0IscUJBQXFCO0FBQ3pDLDRCQUE0Qix1REFBSyxjQUFjLG9CQUFvQjtBQUNuRSxXQUFXLHdEQUFTO0FBQ3BCO0FBQ0Esc0JBQXNCLHFCQUFxQjtBQUMzQztBQUNBLGdEQUFnRCxvQkFBb0I7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixLQUFLLEdBQUc7QUFDN0Isb0JBQW9CLGVBQWUsUUFBUSxHQUFHLEVBQUUsS0FBSztBQUNyRCx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLG1DQUFtQztBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixnQ0FBZ0M7QUFDL0Q7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDJCQUEyQjtBQUNsRDtBQUNBO0FBQ0EsY0FBYyxpQkFBaUI7QUFDL0IsWUFBWSx3REFBUyxjQUFjLHVDQUF1QztBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQix5QkFBeUI7QUFDOUMsa0JBQWtCLGlCQUFpQixFQUFFLHdEQUFTO0FBQzlDO0FBQ0E7QUFDQSxrQkFBa0IsaUJBQWlCLEVBQUUsd0RBQVMsQ0FBQyx1REFBSztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxjQUFjLGlCQUFpQjtBQUMvQixZQUFZLHdEQUFTLENBQUMsZ0ZBQW1CO0FBQ3pDO0FBQ0E7QUFDQSxjQUFjLE1BQU07QUFDcEI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvaGFzaGluZy9oYXNoVHlwZWREYXRhLmpzPzg3ZDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgb3hfX0J5dGVzIGZyb20gXCJveC9CeXRlc1wiO1xuaW1wb3J0ICogYXMgb3hfX1R5cGVkRGF0YSBmcm9tIFwib3gvVHlwZWREYXRhXCI7XG5pbXBvcnQgeyBlbmNvZGVBYmlQYXJhbWV0ZXJzIH0gZnJvbSBcIi4uL2FiaS9lbmNvZGVBYmlQYXJhbWV0ZXJzLmpzXCI7XG5pbXBvcnQgeyB0b0hleCB9IGZyb20gXCIuLi9lbmNvZGluZy9oZXguanNcIjtcbmltcG9ydCB7IGtlY2NhazI1NiB9IGZyb20gXCIuL2tlY2NhazI1Ni5qc1wiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhc2hUeXBlZERhdGEocGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgZG9tYWluID0ge30sIG1lc3NhZ2UsIHByaW1hcnlUeXBlLCB9ID0gcGFyYW1ldGVycztcbiAgICBjb25zdCB0eXBlcyA9IHtcbiAgICAgICAgRUlQNzEyRG9tYWluOiBveF9fVHlwZWREYXRhLmV4dHJhY3RFaXA3MTJEb21haW5UeXBlcyhkb21haW4pLFxuICAgICAgICAuLi5wYXJhbWV0ZXJzLnR5cGVzLFxuICAgIH07XG4gICAgLy8gTmVlZCB0byBkbyBhIHJ1bnRpbWUgdmFsaWRhdGlvbiBjaGVjayBvbiBhZGRyZXNzZXMsIGJ5dGUgcmFuZ2VzLCBpbnRlZ2VyIHJhbmdlcywgZXRjXG4gICAgLy8gYXMgd2UgY2FuJ3Qgc3RhdGljYWxseSBjaGVjayB0aGlzIHdpdGggVHlwZVNjcmlwdC5cbiAgICBveF9fVHlwZWREYXRhLnZhbGlkYXRlKHtcbiAgICAgICAgZG9tYWluLFxuICAgICAgICBtZXNzYWdlLFxuICAgICAgICBwcmltYXJ5VHlwZSxcbiAgICAgICAgdHlwZXMsXG4gICAgfSk7XG4gICAgY29uc3QgcGFydHMgPSBbXCIweDE5MDFcIl07XG4gICAgaWYgKGRvbWFpbilcbiAgICAgICAgcGFydHMucHVzaChveF9fVHlwZWREYXRhLmhhc2hEb21haW4oe1xuICAgICAgICAgICAgZG9tYWluLFxuICAgICAgICAgICAgdHlwZXM6IHR5cGVzLFxuICAgICAgICB9KSk7XG4gICAgaWYgKHByaW1hcnlUeXBlICE9PSBcIkVJUDcxMkRvbWFpblwiKSB7XG4gICAgICAgIGNvbnN0IGhhc2hlZFN0cnVjdCA9ICgoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBlbmNvZGVkID0gZW5jb2RlRGF0YSh7XG4gICAgICAgICAgICAgICAgZGF0YTogbWVzc2FnZSxcbiAgICAgICAgICAgICAgICBwcmltYXJ5VHlwZSxcbiAgICAgICAgICAgICAgICB0eXBlczogdHlwZXMsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBrZWNjYWsyNTYoZW5jb2RlZCk7XG4gICAgICAgIH0pKCk7XG4gICAgICAgIHBhcnRzLnB1c2goaGFzaGVkU3RydWN0KTtcbiAgICB9XG4gICAgcmV0dXJuIGtlY2NhazI1NihveF9fQnl0ZXMuY29uY2F0KC4uLnBhcnRzLm1hcCgocCkgPT4gb3hfX0J5dGVzLmZyb21IZXgocCkpKSk7XG59XG5mdW5jdGlvbiBlbmNvZGVEYXRhKHsgZGF0YSwgcHJpbWFyeVR5cGUsIHR5cGVzLCB9KSB7XG4gICAgY29uc3QgZW5jb2RlZFR5cGVzID0gW3sgdHlwZTogXCJieXRlczMyXCIgfV07XG4gICAgY29uc3QgZW5jb2RlZFZhbHVlcyA9IFtoYXNoVHlwZSh7IHByaW1hcnlUeXBlLCB0eXBlcyB9KV07XG4gICAgaWYgKCF0eXBlc1twcmltYXJ5VHlwZV0pXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdHlwZXNcIik7XG4gICAgZm9yIChjb25zdCBmaWVsZCBvZiB0eXBlc1twcmltYXJ5VHlwZV0pIHtcbiAgICAgICAgY29uc3QgW3R5cGUsIHZhbHVlXSA9IGVuY29kZUZpZWxkKHtcbiAgICAgICAgICAgIG5hbWU6IGZpZWxkLm5hbWUsXG4gICAgICAgICAgICB0eXBlOiBmaWVsZC50eXBlLFxuICAgICAgICAgICAgdHlwZXMsXG4gICAgICAgICAgICB2YWx1ZTogZGF0YVtmaWVsZC5uYW1lXSxcbiAgICAgICAgfSk7XG4gICAgICAgIGVuY29kZWRUeXBlcy5wdXNoKHR5cGUpO1xuICAgICAgICBlbmNvZGVkVmFsdWVzLnB1c2godmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gZW5jb2RlQWJpUGFyYW1ldGVycyhlbmNvZGVkVHlwZXMsIGVuY29kZWRWYWx1ZXMpO1xufVxuZnVuY3Rpb24gaGFzaFR5cGUoeyBwcmltYXJ5VHlwZSwgdHlwZXMsIH0pIHtcbiAgICBjb25zdCBlbmNvZGVkSGFzaFR5cGUgPSB0b0hleChlbmNvZGVUeXBlKHsgcHJpbWFyeVR5cGUsIHR5cGVzIH0pKTtcbiAgICByZXR1cm4ga2VjY2FrMjU2KGVuY29kZWRIYXNoVHlwZSk7XG59XG5mdW5jdGlvbiBlbmNvZGVUeXBlKHsgcHJpbWFyeVR5cGUsIHR5cGVzLCB9KSB7XG4gICAgbGV0IHJlc3VsdCA9IFwiXCI7XG4gICAgY29uc3QgdW5zb3J0ZWREZXBzID0gZmluZFR5cGVEZXBlbmRlbmNpZXMoeyBwcmltYXJ5VHlwZSwgdHlwZXMgfSk7XG4gICAgdW5zb3J0ZWREZXBzLmRlbGV0ZShwcmltYXJ5VHlwZSk7XG4gICAgY29uc3QgZGVwcyA9IFtwcmltYXJ5VHlwZSwgLi4uQXJyYXkuZnJvbSh1bnNvcnRlZERlcHMpLnNvcnQoKV07XG4gICAgZm9yIChjb25zdCB0eXBlIG9mIGRlcHMpIHtcbiAgICAgICAgaWYgKCF0eXBlc1t0eXBlXSlcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdHlwZXNcIik7XG4gICAgICAgIHJlc3VsdCArPSBgJHt0eXBlfSgke3R5cGVzW3R5cGVdXG4gICAgICAgICAgICAubWFwKCh7IG5hbWUsIHR5cGU6IHQgfSkgPT4gYCR7dH0gJHtuYW1lfWApXG4gICAgICAgICAgICAuam9pbihcIixcIil9KWA7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBmaW5kVHlwZURlcGVuZGVuY2llcyh7IHByaW1hcnlUeXBlOiBwcmltYXJ5VHlwZV8sIHR5cGVzLCB9LCByZXN1bHRzID0gbmV3IFNldCgpKSB7XG4gICAgY29uc3QgbWF0Y2ggPSBwcmltYXJ5VHlwZV8ubWF0Y2goL15cXHcqL3UpO1xuICAgIGNvbnN0IHByaW1hcnlUeXBlID0gbWF0Y2g/LlswXTtcbiAgICBpZiAocmVzdWx0cy5oYXMocHJpbWFyeVR5cGUpIHx8IHR5cGVzW3ByaW1hcnlUeXBlXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgIH1cbiAgICByZXN1bHRzLmFkZChwcmltYXJ5VHlwZSk7XG4gICAgZm9yIChjb25zdCBmaWVsZCBvZiB0eXBlc1twcmltYXJ5VHlwZV0pIHtcbiAgICAgICAgZmluZFR5cGVEZXBlbmRlbmNpZXMoeyBwcmltYXJ5VHlwZTogZmllbGQudHlwZSwgdHlwZXMgfSwgcmVzdWx0cyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHRzO1xufVxuZnVuY3Rpb24gZW5jb2RlRmllbGQoeyB0eXBlcywgbmFtZSwgdHlwZSwgdmFsdWUsIH0pIHtcbiAgICBpZiAodHlwZXNbdHlwZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgeyB0eXBlOiBcImJ5dGVzMzJcIiB9LFxuICAgICAgICAgICAga2VjY2FrMjU2KGVuY29kZURhdGEoeyBkYXRhOiB2YWx1ZSwgcHJpbWFyeVR5cGU6IHR5cGUsIHR5cGVzIH0pKSxcbiAgICAgICAgXTtcbiAgICB9XG4gICAgaWYgKHR5cGUgPT09IFwiYnl0ZXNcIikge1xuICAgICAgICBjb25zdCBwcmVwZW5kID0gdmFsdWUubGVuZ3RoICUgMiA/IFwiMFwiIDogXCJcIjtcbiAgICAgICAgdmFsdWUgPSBgMHgke3ByZXBlbmQgKyB2YWx1ZS5zbGljZSgyKX1gO1xuICAgICAgICByZXR1cm4gW3sgdHlwZTogXCJieXRlczMyXCIgfSwga2VjY2FrMjU2KHZhbHVlKV07XG4gICAgfVxuICAgIGlmICh0eXBlID09PSBcInN0cmluZ1wiKVxuICAgICAgICByZXR1cm4gW3sgdHlwZTogXCJieXRlczMyXCIgfSwga2VjY2FrMjU2KHRvSGV4KHZhbHVlKSldO1xuICAgIGlmICh0eXBlLmxhc3RJbmRleE9mKFwiXVwiKSA9PT0gdHlwZS5sZW5ndGggLSAxKSB7XG4gICAgICAgIGNvbnN0IHBhcnNlZFR5cGUgPSB0eXBlLnNsaWNlKDAsIHR5cGUubGFzdEluZGV4T2YoXCJbXCIpKTtcbiAgICAgICAgY29uc3QgdHlwZVZhbHVlUGFpcnMgPSBcbiAgICAgICAgLy8gYmlvbWUtaWdub3JlIGxpbnQvc3VzcGljaW91cy9ub0V4cGxpY2l0QW55OiBDYW4ndCBhbnRpY2lwYXRlIHR5cGVzIG9mIG5lc3RlZCB2YWx1ZXNcbiAgICAgICAgdmFsdWUubWFwKChpdGVtKSA9PiBlbmNvZGVGaWVsZCh7XG4gICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgdHlwZTogcGFyc2VkVHlwZSxcbiAgICAgICAgICAgIHR5cGVzLFxuICAgICAgICAgICAgdmFsdWU6IGl0ZW0sXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHsgdHlwZTogXCJieXRlczMyXCIgfSxcbiAgICAgICAgICAgIGtlY2NhazI1NihlbmNvZGVBYmlQYXJhbWV0ZXJzKHR5cGVWYWx1ZVBhaXJzLm1hcCgoW3RdKSA9PiB0KSwgdHlwZVZhbHVlUGFpcnMubWFwKChbLCB2XSkgPT4gdikpKSxcbiAgICAgICAgXTtcbiAgICB9XG4gICAgcmV0dXJuIFt7IHR5cGUgfSwgdmFsdWVdO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGFzaFR5cGVkRGF0YS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/utils/hashing/hashTypedData.js\n"));

/***/ }),

/***/ "./node_modules/thirdweb/dist/esm/wallets/smart/lib/signing.js":
/*!*********************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/smart/lib/signing.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   confirmContractDeployment: function() { return /* binding */ confirmContractDeployment; },\n/* harmony export */   deploySmartAccount: function() { return /* binding */ deploySmartAccount; },\n/* harmony export */   smartAccountSignMessage: function() { return /* binding */ smartAccountSignMessage; },\n/* harmony export */   smartAccountSignTypedData: function() { return /* binding */ smartAccountSignTypedData; }\n/* harmony export */ });\n/* harmony import */ var _auth_serialize_erc6492_signature_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../auth/serialize-erc6492-signature.js */ \"./node_modules/thirdweb/dist/esm/auth/serialize-erc6492-signature.js\");\n/* harmony import */ var _auth_verify_hash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../auth/verify-hash.js */ \"./node_modules/thirdweb/dist/esm/auth/verify-hash.js\");\n/* harmony import */ var _transaction_actions_encode_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../transaction/actions/encode.js */ \"./node_modules/thirdweb/dist/esm/transaction/actions/encode.js\");\n/* harmony import */ var _utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/abi/encodeAbiParameters.js */ \"./node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js\");\n/* harmony import */ var _utils_bytecode_is_contract_deployed_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/bytecode/is-contract-deployed.js */ \"./node_modules/thirdweb/dist/esm/utils/bytecode/is-contract-deployed.js\");\n/* harmony import */ var _utils_hashing_hashMessage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/hashing/hashMessage.js */ \"./node_modules/thirdweb/dist/esm/utils/hashing/hashMessage.js\");\n/* harmony import */ var _utils_hashing_hashTypedData_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../utils/hashing/hashTypedData.js */ \"./node_modules/thirdweb/dist/esm/utils/hashing/hashTypedData.js\");\n/* harmony import */ var _calls_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./calls.js */ \"./node_modules/thirdweb/dist/esm/wallets/smart/lib/calls.js\");\n\n\n\n\n\n\n\n\n/**\n * If the account is already deployed, generate an ERC-1271 signature.\n * If the account is not deployed, generate an ERC-6492 signature unless otherwise specified.\n *\n * @internal\n */\nasync function smartAccountSignMessage({ accountContract, factoryContract, options, message, }) {\n    const originalMsgHash = (0,_utils_hashing_hashMessage_js__WEBPACK_IMPORTED_MODULE_0__.hashMessage)(message);\n    let sig;\n    const wrappedMessageHash = (0,_utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.encodeAbiParameters)([{ type: \"bytes32\" }], [originalMsgHash]);\n    sig = await options.personalAccount.signTypedData({\n        domain: {\n            chainId: options.chain.id,\n            name: \"Account\",\n            verifyingContract: accountContract.address,\n            version: \"1\",\n        },\n        message: { message: wrappedMessageHash },\n        primaryType: \"AccountMessage\",\n        types: { AccountMessage: [{ name: \"message\", type: \"bytes\" }] },\n    });\n    const isDeployed = await (0,_utils_bytecode_is_contract_deployed_js__WEBPACK_IMPORTED_MODULE_2__.isContractDeployed)(accountContract);\n    if (isDeployed) {\n        const isValid = await (0,_auth_verify_hash_js__WEBPACK_IMPORTED_MODULE_3__.verifyEip1271Signature)({\n            contract: accountContract,\n            hash: originalMsgHash,\n            signature: sig,\n        });\n        if (isValid) {\n            return sig;\n        }\n        throw new Error(\"Failed to verify signature\");\n    }\n    else {\n        const deployTx = (0,_calls_js__WEBPACK_IMPORTED_MODULE_4__.prepareCreateAccount)({\n            accountSalt: options.overrides?.accountSalt,\n            adminAddress: options.personalAccount.address,\n            createAccountOverride: options.overrides?.createAccount,\n            factoryContract,\n        });\n        if (!deployTx) {\n            throw new Error(\"Create account override not provided\");\n        }\n        const initCode = await (0,_transaction_actions_encode_js__WEBPACK_IMPORTED_MODULE_5__.encode)(deployTx);\n        const erc6492Sig = (0,_auth_serialize_erc6492_signature_js__WEBPACK_IMPORTED_MODULE_6__.serializeErc6492Signature)({\n            address: factoryContract.address,\n            data: initCode,\n            signature: sig,\n        });\n        return erc6492Sig;\n    }\n}\nasync function smartAccountSignTypedData({ accountContract, factoryContract, options, typedData, }) {\n    const isSelfVerifyingContract = typedData.domain?.verifyingContract?.toLowerCase() ===\n        accountContract.address?.toLowerCase();\n    if (isSelfVerifyingContract) {\n        // if the contract is self-verifying, we can just sign the message with the EOA (ie. adding a session key)\n        return options.personalAccount.signTypedData(typedData);\n    }\n    const originalMsgHash = (0,_utils_hashing_hashTypedData_js__WEBPACK_IMPORTED_MODULE_7__.hashTypedData)(typedData);\n    let sig;\n    const wrappedMessageHash = (0,_utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.encodeAbiParameters)([{ type: \"bytes32\" }], [originalMsgHash]);\n    sig = await options.personalAccount.signTypedData({\n        domain: {\n            chainId: options.chain.id,\n            name: \"Account\",\n            verifyingContract: accountContract.address,\n            version: \"1\",\n        },\n        message: { message: wrappedMessageHash },\n        primaryType: \"AccountMessage\",\n        types: { AccountMessage: [{ name: \"message\", type: \"bytes\" }] },\n    });\n    const isDeployed = await (0,_utils_bytecode_is_contract_deployed_js__WEBPACK_IMPORTED_MODULE_2__.isContractDeployed)(accountContract);\n    if (isDeployed) {\n        const isValid = await (0,_auth_verify_hash_js__WEBPACK_IMPORTED_MODULE_3__.verifyEip1271Signature)({\n            contract: accountContract,\n            hash: originalMsgHash,\n            signature: sig,\n        });\n        if (isValid) {\n            return sig;\n        }\n        throw new Error(\"Failed to verify signature\");\n    }\n    else {\n        const deployTx = (0,_calls_js__WEBPACK_IMPORTED_MODULE_4__.prepareCreateAccount)({\n            accountSalt: options.overrides?.accountSalt,\n            adminAddress: options.personalAccount.address,\n            createAccountOverride: options.overrides?.createAccount,\n            factoryContract,\n        });\n        if (!deployTx) {\n            throw new Error(\"Create account override not provided\");\n        }\n        const initCode = await (0,_transaction_actions_encode_js__WEBPACK_IMPORTED_MODULE_5__.encode)(deployTx);\n        const erc6492Sig = (0,_auth_serialize_erc6492_signature_js__WEBPACK_IMPORTED_MODULE_6__.serializeErc6492Signature)({\n            address: factoryContract.address,\n            data: initCode,\n            signature: sig,\n        });\n        return erc6492Sig;\n    }\n}\nasync function confirmContractDeployment(args) {\n    const { accountContract } = args;\n    const startTime = Date.now();\n    const timeout = 60000; // wait 1 minute max\n    const { isContractDeployed } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../../utils/bytecode/is-contract-deployed.js */ \"./node_modules/thirdweb/dist/esm/utils/bytecode/is-contract-deployed.js\"));\n    let isDeployed = await isContractDeployed(accountContract);\n    while (!isDeployed) {\n        if (Date.now() - startTime > timeout) {\n            throw new Error(\"Timeout: Smart account deployment not confirmed after 1 minute\");\n        }\n        await new Promise((resolve) => setTimeout(resolve, 500));\n        isDeployed = await isContractDeployed(accountContract);\n    }\n}\n/**\n * Deployes a smart account via a dummy transaction. If the account is already deployed, this will do nothing.\n *\n * @param args - Arguments for the deployment.\n * @param args.smartAccount - The smart account to deploy.\n * @param args.chain - The chain to deploy on.\n * @param args.client - The client to use for the deployment.\n * @param args.accountContract - The account contract to deploy.\n *\n * @example\n * ```ts\n * import { deploySmartAccount } from \"thirdweb\";\n *\n * const account = await deploySmartAccount({\n *   smartAccount,\n *   chain,\n *   client,\n *   accountContract,\n * });\n * ```\n *\n * @wallet\n */\nasync function deploySmartAccount(args) {\n    const { chain, client, smartAccount, accountContract } = args;\n    const isDeployed = await (0,_utils_bytecode_is_contract_deployed_js__WEBPACK_IMPORTED_MODULE_2__.isContractDeployed)(accountContract);\n    if (isDeployed) {\n        return;\n    }\n    const [{ sendTransaction }, { prepareTransaction }] = await Promise.all([\n        Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../../transaction/actions/send-transaction.js */ \"./node_modules/thirdweb/dist/esm/transaction/actions/send-transaction.js\")),\n        Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../../transaction/prepare-transaction.js */ \"./node_modules/thirdweb/dist/esm/transaction/prepare-transaction.js\")),\n    ]);\n    const dummyTx = prepareTransaction({\n        chain: chain,\n        client: client,\n        gas: 50000n,\n        to: accountContract.address,\n        value: 0n, // force gas to avoid simulation error\n    });\n    const deployResult = await sendTransaction({\n        account: smartAccount,\n        transaction: dummyTx,\n    });\n    await confirmContractDeployment({\n        accountContract,\n    });\n    return deployResult;\n}\n//# sourceMappingURL=signing.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/wallets/smart/lib/signing.js\n"));

/***/ })

}]);