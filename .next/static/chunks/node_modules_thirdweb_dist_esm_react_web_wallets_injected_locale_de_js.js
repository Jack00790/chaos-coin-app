"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_thirdweb_dist_esm_react_web_wallets_injected_locale_de_js"],{

/***/ "./node_modules/thirdweb/dist/esm/react/web/wallets/injected/locale/de.js":
/*!********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/react/web/wallets/injected/locale/de.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/**\n * @internal\n */\nconst injectedWalletLocaleEn = (wallet) => ({\n    connectionScreen: {\n        failed: \"Verbindung fehlgeschlagen\",\n        inProgress: \"Verbindung wird hergestellt\",\n        instruction: `Akzeptiere die Verbindung in ${wallet}`,\n        retry: \"Erneut versuchen\",\n    },\n    download: {\n        android: \"Von Google Play herunterladen\",\n        chrome: \"Chrome Extension installieren\",\n        iOS: \"Von App Store herunterladen\",\n    },\n    getStartedLink: `Du hast ${wallet} nicht?`,\n    getStartedScreen: {\n        instruction: `Scanne den QR Code um ${wallet} herunterzuladen`,\n    },\n    scanScreen: {\n        instruction: `Scanne den QR Code um ${wallet} zu verbinden`,\n    },\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (injectedWalletLocaleEn);\n//# sourceMappingURL=de.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vcmVhY3Qvd2ViL3dhbGxldHMvaW5qZWN0ZWQvbG9jYWxlL2RlLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxPQUFPO0FBQzVEO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLCtCQUErQixRQUFRO0FBQ3ZDO0FBQ0EsOENBQThDLFFBQVE7QUFDdEQsS0FBSztBQUNMO0FBQ0EsOENBQThDLFFBQVE7QUFDdEQsS0FBSztBQUNMLENBQUM7QUFDRCwrREFBZSxzQkFBc0IsRUFBQztBQUN0QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vcmVhY3Qvd2ViL3dhbGxldHMvaW5qZWN0ZWQvbG9jYWxlL2RlLmpzPzJmNTYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuY29uc3QgaW5qZWN0ZWRXYWxsZXRMb2NhbGVFbiA9ICh3YWxsZXQpID0+ICh7XG4gICAgY29ubmVjdGlvblNjcmVlbjoge1xuICAgICAgICBmYWlsZWQ6IFwiVmVyYmluZHVuZyBmZWhsZ2VzY2hsYWdlblwiLFxuICAgICAgICBpblByb2dyZXNzOiBcIlZlcmJpbmR1bmcgd2lyZCBoZXJnZXN0ZWxsdFwiLFxuICAgICAgICBpbnN0cnVjdGlvbjogYEFremVwdGllcmUgZGllIFZlcmJpbmR1bmcgaW4gJHt3YWxsZXR9YCxcbiAgICAgICAgcmV0cnk6IFwiRXJuZXV0IHZlcnN1Y2hlblwiLFxuICAgIH0sXG4gICAgZG93bmxvYWQ6IHtcbiAgICAgICAgYW5kcm9pZDogXCJWb24gR29vZ2xlIFBsYXkgaGVydW50ZXJsYWRlblwiLFxuICAgICAgICBjaHJvbWU6IFwiQ2hyb21lIEV4dGVuc2lvbiBpbnN0YWxsaWVyZW5cIixcbiAgICAgICAgaU9TOiBcIlZvbiBBcHAgU3RvcmUgaGVydW50ZXJsYWRlblwiLFxuICAgIH0sXG4gICAgZ2V0U3RhcnRlZExpbms6IGBEdSBoYXN0ICR7d2FsbGV0fSBuaWNodD9gLFxuICAgIGdldFN0YXJ0ZWRTY3JlZW46IHtcbiAgICAgICAgaW5zdHJ1Y3Rpb246IGBTY2FubmUgZGVuIFFSIENvZGUgdW0gJHt3YWxsZXR9IGhlcnVudGVyenVsYWRlbmAsXG4gICAgfSxcbiAgICBzY2FuU2NyZWVuOiB7XG4gICAgICAgIGluc3RydWN0aW9uOiBgU2Nhbm5lIGRlbiBRUiBDb2RlIHVtICR7d2FsbGV0fSB6dSB2ZXJiaW5kZW5gLFxuICAgIH0sXG59KTtcbmV4cG9ydCBkZWZhdWx0IGluamVjdGVkV2FsbGV0TG9jYWxlRW47XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/react/web/wallets/injected/locale/de.js\n"));

/***/ })

}]);